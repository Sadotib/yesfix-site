// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: queries.sql

package queries

import (
	"context"
)

const insertUserTest = `-- name: InsertUserTest :one
INSERT INTO prebook_data(uid, firstname,lastname,email,phone,city,locality) VALUES($1, $2, $3, $4, $5, $6,$7) RETURNING uid, firstname, lastname, email, phone, city, locality, created_at, updated_at, deleted_at
`

type InsertUserTestParams struct {
	Uid       string `db:"uid" json:"uid"`
	Firstname string `db:"firstname" json:"firstname"`
	Lastname  string `db:"lastname" json:"lastname"`
	Email     string `db:"email" json:"email"`
	Phone     string `db:"phone" json:"phone"`
	City      string `db:"city" json:"city"`
	Locality  string `db:"locality" json:"locality"`
}

func (q *Queries) InsertUserTest(ctx context.Context, arg InsertUserTestParams) (PrebookDatum, error) {
	row := q.db.QueryRow(ctx, insertUserTest,
		arg.Uid,
		arg.Firstname,
		arg.Lastname,
		arg.Email,
		arg.Phone,
		arg.City,
		arg.Locality,
	)
	var i PrebookDatum
	err := row.Scan(
		&i.Uid,
		&i.Firstname,
		&i.Lastname,
		&i.Email,
		&i.Phone,
		&i.City,
		&i.Locality,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
	)
	return i, err
}
